{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","handleOnChoose","selectedTodoId","className","map","todo","id","completed","title","type","onClick","userId","TodoFilter","setFilteredTodos","useState","query","setQuery","filterValue","setFilterValue","useEffect","filteredTodosByStatus","filter","toLowerCase","includes","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","todoId","selectedTodo","find","currentUser","setCurrentUser","getUser","user","catch","error","Error","classNames","href","email","name","App","setTodos","filteredTodos","setSelectedTodoId","selectedUser","setSelectedUserId","allTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2b7680a.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  handleOnChoose: (userId : number, todoId: number) => void;\n  selectedTodoId: number;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    handleOnChoose,\n    selectedTodoId,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          todos.map((todo) => {\n            return (\n              <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed\n                    ? (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    ) : (\n                      ''\n                    )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={\n                      todo.completed ? 'has-text-success' : 'has-text-danger'\n                    }\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => handleOnChoose(todo.userId, todo.id)}\n                  >\n                    <span\n                      className=\"icon\"\n                    >\n                      {selectedTodoId !== todo.id ? (\n                        <i className=\"far fa-eye\" />\n                      ) : (\n                        <i className=\"far fa-eye-slash\" />\n                      )}\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setFilteredTodos: (todos: Todo[]) => void\n  todos: Todo[]\n};\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setFilteredTodos }) => {\n  const [query, setQuery] = useState('');\n  const [filterValue, setFilterValue] = useState('all');\n\n  useEffect(() => {\n    const filteredTodosByTitle = todos\n      .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n    const filteredTodosByStatus = filteredTodosByTitle\n      .filter(todo => {\n        switch (filterValue) {\n          case 'active':\n            return !todo.completed;\n          case 'completed':\n            return todo.completed;\n          default:\n            return true;\n        }\n      });\n\n    setFilteredTodos(filteredTodosByStatus);\n  }, [query, filterValue, todos]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setFilterValue(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todoId: number,\n  todos: Todo[],\n  userId: number,\n  handleOnChoose: (userId: number, todoId: number) => void,\n};\n\nexport const TodoModal: React.FC<Props>\n= ({\n  todoId,\n  todos,\n  userId,\n  handleOnChoose,\n}) => {\n  const selectedTodo = todos.find(todo => todo.id === todoId);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(user => setCurrentUser(user))\n      .catch(error => {\n        throw new Error(`User not found ${error}`);\n      });\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      { !currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => handleOnChoose(0, 0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={\n                  classNames({ 'has-text-danger': !selectedTodo?.completed },\n                    { 'has-text-success': selectedTodo?.completed })\n                }\n              >\n                {\n                  selectedTodo?.completed\n                    ? 'Done'\n                    : 'Planned'\n                }\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${currentUser?.email}`}>\n                {currentUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo []>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo []>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState<number>(0);\n  const [selectedUser, setSelectedUserId] = useState<number>(0);\n\n  useEffect(() => {\n    getTodos().then(allTodos => {\n      setTodos(allTodos);\n    });\n  }, []);\n\n  const handleOnChoose = (userId : number, todoId: number) => {\n    setSelectedUserId(userId);\n    setSelectedTodoId(todoId);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setFilteredTodos={setFilteredTodos} todos={todos} />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length === 0\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={filteredTodos}\n                      handleOnChoose={handleOnChoose}\n                      selectedTodoId={selectedTodoId}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId && (\n        <TodoModal\n          todoId={selectedTodoId}\n          userId={selectedUser}\n          handleOnChoose={handleOnChoose}\n          todos={todos}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}